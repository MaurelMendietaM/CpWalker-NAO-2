<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.ald.softbankrobotics.com/schema/choregraphe/project.xsd" xar_version="3">
  <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
    <bitmap>media/images/box/root.png</bitmap>
    <script language="4">
      <content>
        <![CDATA[]]>
      </content>
    </script>
    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
    <Timeline enable="0">
      <BehaviorLayer name="behavior_layer1">
        <BehaviorKeyframe name="keyframe1" index="1">
          <Diagram>
            <Box name="Timeline" id="1" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="390" y="41">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="229">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="430" y="43">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="97" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="Esta, es mi pierna, derecha" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="27" value="0.261268" />
                    <Key frame="70" value="0.261268" />
                    <Key frame="116" value="19.8611" />
                    <Key frame="152" value="17.5759" />
                    <Key frame="186" value="19.8611" />
                    <Key frame="229" value="-0.0902951" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="27" value="0.261268" />
                    <Key frame="70" value="0.261268" />
                    <Key frame="116" value="-22.9421" />
                    <Key frame="152" value="-21.7117" />
                    <Key frame="186" value="-20.7449" />
                    <Key frame="229" value="3.95273" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="27" value="-6.94585" />
                    <Key frame="70" value="-6.06693" />
                    <Key frame="116" value="-13.0104" />
                    <Key frame="152" value="-19.4265" />
                    <Key frame="186" value="4.48007" />
                    <Key frame="229" value="4.48007" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="27" value="1.32078" />
                    <Key frame="70" value="0.705531" />
                    <Key frame="116" value="0.0902951" />
                    <Key frame="152" value="-4.56796" />
                    <Key frame="186" value="-6.85315" />
                    <Key frame="229" value="-7.29261" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="27" value="-21.4432" />
                    <Key frame="70" value="-21.4432" />
                    <Key frame="116" value="-21.4432" />
                    <Key frame="152" value="-20.3006" />
                    <Key frame="186" value="-24.0799" />
                    <Key frame="229" value="-23.0252" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="27" value="-67.8548" />
                    <Key frame="70" value="-67.8548" />
                    <Key frame="116" value="-67.8548" />
                    <Key frame="152" value="-67.5911" />
                    <Key frame="186" value="-67.8548" />
                    <Key frame="229" value="-67.8548" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="27" value="0.2916" />
                    <Key frame="70" value="0.2916" />
                    <Key frame="116" value="0.2916" />
                    <Key frame="152" value="0.282" />
                    <Key frame="186" value="0.2884" />
                    <Key frame="229" value="0.2884" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="27" value="18.6354" />
                    <Key frame="70" value="18.6354" />
                    <Key frame="116" value="23.5574" />
                    <Key frame="152" value="28.1278" />
                    <Key frame="186" value="7.64898" />
                    <Key frame="229" value="7.38531" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="27" value="-0.876518" />
                    <Key frame="70" value="-2.107" />
                    <Key frame="116" value="-2.81013" />
                    <Key frame="152" value="4.66066" />
                    <Key frame="186" value="6.68218" />
                    <Key frame="229" value="7.4732" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="27" value="-9.40201" />
                    <Key frame="70" value="-8.61098" />
                    <Key frame="116" value="-12.8298" />
                    <Key frame="152" value="-5.2711" />
                    <Key frame="186" value="-9.40201" />
                    <Key frame="229" value="-9.31412" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="27" value="-5.3638" />
                    <Key frame="70" value="-5.3638" />
                    <Key frame="116" value="-5.3638" />
                    <Key frame="152" value="-5.45169" />
                    <Key frame="186" value="-5.3638" />
                    <Key frame="229" value="-5.3638" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="27" value="87.0983" />
                    <Key frame="70" value="87.0983" />
                    <Key frame="116" value="87.0983" />
                    <Key frame="152" value="87.6256" />
                    <Key frame="186" value="86.1315" />
                    <Key frame="229" value="86.7467" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="27" value="7.3805" />
                    <Key frame="70" value="7.3805" />
                    <Key frame="116" value="7.3805" />
                    <Key frame="152" value="7.20472" />
                    <Key frame="186" value="9.13833" />
                    <Key frame="229" value="7.55628" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="27" value="6.4137" />
                    <Key frame="70" value="6.4137" />
                    <Key frame="116" value="6.4137" />
                    <Key frame="152" value="6.94104" />
                    <Key frame="186" value="6.4137" />
                    <Key frame="229" value="6.4137" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="27" value="0.793436" />
                    <Key frame="70" value="12.3073" />
                    <Key frame="116" value="18.0202" />
                    <Key frame="152" value="20.7449" />
                    <Key frame="186" value="4.74855" />
                    <Key frame="229" value="4.57277" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="27" value="6.06693" />
                    <Key frame="70" value="0.353968" />
                    <Key frame="116" value="1.58445" />
                    <Key frame="152" value="6.41851" />
                    <Key frame="186" value="6.3306" />
                    <Key frame="229" value="6.24271" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="27" value="1.05711" />
                    <Key frame="70" value="18.987" />
                    <Key frame="116" value="18.3718" />
                    <Key frame="152" value="18.1081" />
                    <Key frame="186" value="23.8211" />
                    <Key frame="229" value="22.239" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="27" value="-57.9231" />
                    <Key frame="70" value="-22.239" />
                    <Key frame="116" value="-21.6238" />
                    <Key frame="152" value="-20.657" />
                    <Key frame="186" value="69.52" />
                    <Key frame="229" value="68.641" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="27" value="0.3448" />
                    <Key frame="70" value="0.3448" />
                    <Key frame="116" value="0.3448" />
                    <Key frame="152" value="0.3328" />
                    <Key frame="186" value="0.3184" />
                    <Key frame="229" value="0.3304" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="27" value="6.32579" />
                    <Key frame="70" value="-5.01224" />
                    <Key frame="116" value="-12.5709" />
                    <Key frame="152" value="-14.2409" />
                    <Key frame="186" value="7.3805" />
                    <Key frame="229" value="7.64417" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="27" value="-4.2164" />
                    <Key frame="70" value="-0.788627" />
                    <Key frame="116" value="-1.57965" />
                    <Key frame="152" value="-5.09532" />
                    <Key frame="186" value="-6.50159" />
                    <Key frame="229" value="-7.20472" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="27" value="-9.40201" />
                    <Key frame="70" value="-8.61098" />
                    <Key frame="116" value="-12.8298" />
                    <Key frame="152" value="-5.2711" />
                    <Key frame="186" value="-9.40201" />
                    <Key frame="229" value="-9.31412" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="27" value="-0.173378" />
                    <Key frame="70" value="-0.173378" />
                    <Key frame="116" value="-0.173378" />
                    <Key frame="152" value="-1.22808" />
                    <Key frame="186" value="-5.00743" />
                    <Key frame="229" value="-5.00743" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="27" value="70.4037" />
                    <Key frame="70" value="67.1517" />
                    <Key frame="116" value="65.8333" />
                    <Key frame="152" value="66.097" />
                    <Key frame="186" value="86.4" />
                    <Key frame="229" value="86.5758" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="27" value="3.86484" />
                    <Key frame="70" value="-3.95753" />
                    <Key frame="116" value="-4.66066" />
                    <Key frame="152" value="-4.57277" />
                    <Key frame="186" value="-9.58261" />
                    <Key frame="229" value="-1.58445" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="27" value="91.3171" />
                    <Key frame="70" value="103.358" />
                    <Key frame="116" value="103.358" />
                    <Key frame="152" value="102.743" />
                    <Key frame="186" value="6.94104" />
                    <Key frame="229" value="8.25942" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="Color Edit" id="3" localization="8" tooltip="Send a color encoded as [R,G,B] values." plugin="coloredit_plugin" x="238" y="222">
              <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([170, 255, 0])]]>
                </content>
              </script>
              <pluginContent>
                <color>#aaff00</color>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the color on the output." id="2" />
              <Output name="onStopped" type="2" type_size="3" nature="2" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
            </Box>
            <Box name="Eye LEDs" id="2" localization="8" tooltip="Set the LED color of the eyes. Note that you must open the box to enter the color." x="486" y="210">
              <bitmap>media/images/box/interaction/LED.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
              <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Right" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                <Choice value="Both" />
                <Choice value="Left" />
                <Choice value="Right" />
              </Parameter>
              <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="1.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.fadeOps = []
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        fadeOp = self.leds.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"), _async=True)
        self.fadeOps.append(fadeOp)
        fadeOp.wait()
        self.fadeOps.remove(fadeOp)
        if( self.fadeOps == [] ):
            self.onDone() # activate output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                          <Choice value="Both" />
                          <Choice value="Left" />
                          <Choice value="Right" />
                        </Parameter>
                        <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                      </Box>
                      <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([0, 81, 255])]]>
                          </content>
                        </script>
                        <pluginContent>
                          <color>#0051ff</color>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                        <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                      </Box>
                      <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                      <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Set Single LED" id="4" localization="8" tooltip="Set the intensity of a specific LED." x="548" y="363">
              <bitmap>media/images/box/interaction/LED.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LED name"), self.getParameter("Intensity (%)")/100., self.getParameter("Duration (s)"))
        self.onReady() # activate output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
              <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
              <Parameter name="LED name" inherits_from_parent="0" content_type="3" value="RightFootLedsBlue" default_value="LeftFaceLed1" custom_choice="0" tooltip="The name of LED which intensity is to set." id="4">
                <Choice value="Brain0" />
                <Choice value="Brain1" />
                <Choice value="Brain2" />
                <Choice value="Brain3" />
                <Choice value="Brain4" />
                <Choice value="Brain5" />
                <Choice value="Brain6" />
                <Choice value="Brain7" />
                <Choice value="Brain8" />
                <Choice value="Brain9" />
                <Choice value="Brain10" />
                <Choice value="Brain11" />
                <Choice value="LeftEarLed1" />
                <Choice value="LeftEarLed2" />
                <Choice value="LeftEarLed3" />
                <Choice value="LeftEarLed4" />
                <Choice value="LeftEarLed5" />
                <Choice value="LeftEarLed6" />
                <Choice value="LeftEarLed7" />
                <Choice value="LeftEarLed8" />
                <Choice value="LeftEarLed9" />
                <Choice value="LeftEarLed10" />
                <Choice value="LeftFaceLed1" />
                <Choice value="LeftFaceLed2" />
                <Choice value="LeftFaceLed3" />
                <Choice value="LeftFaceLed4" />
                <Choice value="LeftFaceLed5" />
                <Choice value="LeftFaceLed6" />
                <Choice value="LeftFaceLed7" />
                <Choice value="LeftFaceLed8" />
                <Choice value="LeftFootLedsBlue" />
                <Choice value="LeftFootLedsGreen" />
                <Choice value="LeftFootLedsRed" />
                <Choice value="RightEarLed1" />
                <Choice value="RightEarLed2" />
                <Choice value="RightEarLed3" />
                <Choice value="RightEarLed4" />
                <Choice value="RightEarLed5" />
                <Choice value="RightEarLed6" />
                <Choice value="RightEarLed7" />
                <Choice value="RightEarLed8" />
                <Choice value="RightEarLed9" />
                <Choice value="RightEarLed10" />
                <Choice value="RightFaceLed1" />
                <Choice value="RightFaceLed2" />
                <Choice value="RightFaceLed3" />
                <Choice value="RightFaceLed4" />
                <Choice value="RightFaceLed5" />
                <Choice value="RightFaceLed6" />
                <Choice value="RightFaceLed7" />
                <Choice value="RightFaceLed8" />
                <Choice value="RightFootLedsBlue" />
                <Choice value="RightFootLedsGreen" />
                <Choice value="RightFootLedsRed" />
              </Parameter>
              <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
              <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="7" default_value="1" min="0" max="60" tooltip="How much time to go to the max/min intensity in seconds." id="6" />
            </Box>
            <Box name="Color Edit (1)" id="5" localization="8" tooltip="Send a color encoded as [R,G,B] values." plugin="coloredit_plugin" x="774" y="236">
              <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([255, 255, 255])]]>
                </content>
              </script>
              <pluginContent>
                <color>#ffffff</color>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the color on the output." id="2" />
              <Output name="onStopped" type="2" type_size="3" nature="2" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
            </Box>
            <Box name="Eye LEDs (1)" id="6" localization="8" tooltip="Set the LED color of the eyes. Note that you must open the box to enter the color." x="1032" y="168">
              <bitmap>media/images/box/interaction/LED.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
              <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Right" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                <Choice value="Both" />
                <Choice value="Left" />
                <Choice value="Right" />
              </Parameter>
              <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="1.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.fadeOps = []
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        fadeOp = self.leds.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"), _async=True)
        self.fadeOps.append(fadeOp)
        fadeOp.wait()
        self.fadeOps.remove(fadeOp)
        if( self.fadeOps == [] ):
            self.onDone() # activate output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                          <Choice value="Both" />
                          <Choice value="Left" />
                          <Choice value="Right" />
                        </Parameter>
                        <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                      </Box>
                      <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([0, 81, 255])]]>
                          </content>
                        </script>
                        <pluginContent>
                          <color>#0051ff</color>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                        <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                      </Box>
                      <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                      <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Set Single LED (1)" id="7" localization="8" tooltip="Set the intensity of a specific LED." x="1046" y="314">
              <bitmap>media/images/box/interaction/LED.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LED name"), self.getParameter("Intensity (%)")/100., self.getParameter("Duration (s)"))
        self.onReady() # activate output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
              <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
              <Parameter name="LED name" inherits_from_parent="0" content_type="3" value="RightFootLedsBlue" default_value="LeftFaceLed1" custom_choice="0" tooltip="The name of LED which intensity is to set." id="4">
                <Choice value="Brain0" />
                <Choice value="Brain1" />
                <Choice value="Brain2" />
                <Choice value="Brain3" />
                <Choice value="Brain4" />
                <Choice value="Brain5" />
                <Choice value="Brain6" />
                <Choice value="Brain7" />
                <Choice value="Brain8" />
                <Choice value="Brain9" />
                <Choice value="Brain10" />
                <Choice value="Brain11" />
                <Choice value="LeftEarLed1" />
                <Choice value="LeftEarLed2" />
                <Choice value="LeftEarLed3" />
                <Choice value="LeftEarLed4" />
                <Choice value="LeftEarLed5" />
                <Choice value="LeftEarLed6" />
                <Choice value="LeftEarLed7" />
                <Choice value="LeftEarLed8" />
                <Choice value="LeftEarLed9" />
                <Choice value="LeftEarLed10" />
                <Choice value="LeftFaceLed1" />
                <Choice value="LeftFaceLed2" />
                <Choice value="LeftFaceLed3" />
                <Choice value="LeftFaceLed4" />
                <Choice value="LeftFaceLed5" />
                <Choice value="LeftFaceLed6" />
                <Choice value="LeftFaceLed7" />
                <Choice value="LeftFaceLed8" />
                <Choice value="LeftFootLedsBlue" />
                <Choice value="LeftFootLedsGreen" />
                <Choice value="LeftFootLedsRed" />
                <Choice value="RightEarLed1" />
                <Choice value="RightEarLed2" />
                <Choice value="RightEarLed3" />
                <Choice value="RightEarLed4" />
                <Choice value="RightEarLed5" />
                <Choice value="RightEarLed6" />
                <Choice value="RightEarLed7" />
                <Choice value="RightEarLed8" />
                <Choice value="RightEarLed9" />
                <Choice value="RightEarLed10" />
                <Choice value="RightFaceLed1" />
                <Choice value="RightFaceLed2" />
                <Choice value="RightFaceLed3" />
                <Choice value="RightFaceLed4" />
                <Choice value="RightFaceLed5" />
                <Choice value="RightFaceLed6" />
                <Choice value="RightFaceLed7" />
                <Choice value="RightFaceLed8" />
                <Choice value="RightFootLedsBlue" />
                <Choice value="RightFootLedsGreen" />
                <Choice value="RightFootLedsRed" />
              </Parameter>
              <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
              <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="7" default_value="1" min="0" max="60" tooltip="How much time to go to the max/min intensity in seconds." id="6" />
            </Box>
            <Box name="Single Eye LED" id="8" localization="8" tooltip="Set the color of one eye LED. Note that you must open the box to enter the color." x="998" y="565">
              <bitmap>media/images/box/interaction/LED.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
              <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Left" default_value="Left" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                <Choice value="Left" />
                <Choice value="Right" />
              </Parameter>
              <Parameter name="Angle (degrees)" inherits_from_parent="0" content_type="3" value="180" default_value="0" custom_choice="0" tooltip="Angle (in degrees) where the LED is on the robot&apos;s eye. They are placed as&#x0A;following:&#x0A;&#x0A;         Right Eye   -&gt; (Front) &lt;-    Left Eye&#x0A;                     &#x0A;       90° .   . 45°                     45° .   . 90°&#x0A;  135° .         . 0°                   0° .         . 135°&#x0A;  180° .         . 315°            315° .         . 180°&#x0A;     225° .   . 270°                  270° .   . 225°" id="5">
                <Choice value="0" />
                <Choice value="45" />
                <Choice value="90" />
                <Choice value="135" />
                <Choice value="180" />
                <Choice value="225" />
                <Choice value="270" />
                <Choice value="315" />
              </Parameter>
              <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="6" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="154" y="48">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([255, 0, 0])]]>
                          </content>
                        </script>
                        <pluginContent>
                          <color>#ff0000</color>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                        <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                      </Box>
                      <Box name="Eye LED" id="2" localization="8" tooltip="Set the intensity of one LED of robot&apos;s eyes." x="329" y="39">
                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.fadeOps = []
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #puts code for box cleanup here
        #~ for fadeOp in self.fadeOps:
            #~ fadeOp.cancel()
        pass

    def onInput_color(self, p):
        """Fade the eye Led you have chosen to the color you have chosen with the duration you have chosen!"""
        aEyeNums = self.processAngle()
        if self.getParameter("Side") == "Left":
            nEyeNum = aEyeNums[0]
        else:
            nEyeNum = aEyeNums[1]
        sName = "FaceLed"+self.getParameter("Side")+str(nEyeNum)
        fadeOp = self.leds.fadeRGB(sName, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"), _async=True)
        self.fadeOps.append(fadeOp)
        fadeOp.wait()
        self.fadeOps.remove(fadeOp)
        if( self.fadeOps == [] ):
            self.onDone() # activate output of the box

    def processAngle(self):
        n = int( self.getParameter("Angle (degrees)") )
        return [(45 - n) % 360 / 45] * 2]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="LED color." id="2" />
                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Left" default_value="Left" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                          <Choice value="Left" />
                          <Choice value="Right" />
                        </Parameter>
                        <Parameter name="Angle (degrees)" inherits_from_parent="1" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="Angle (in degrees) where the LED is on the robot&apos;s eye. They are placed as&#x0A;following:&#x0A;&#x0A;         Right Eye   -&gt; (Front) &lt;-    Left Eye&#x0A;                     &#x0A;       90° .   . 45°                     45° .   . 90°&#x0A;  135° .         . 0°                   0° .         . 135°&#x0A;  180° .         . 315°            315° .         . 180°&#x0A;     225° .   . 270°                  270° .   . 225°" id="5">
                          <Choice value="0" />
                          <Choice value="45" />
                          <Choice value="90" />
                          <Choice value="135" />
                          <Choice value="180" />
                          <Choice value="225" />
                          <Choice value="270" />
                          <Choice value="315" />
                        </Parameter>
                        <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="6" />
                      </Box>
                      <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="2" indexofinput="2" outputowner="16" indexofoutput="3" />
                      <Link inputowner="0" indexofinput="3" outputowner="2" indexofoutput="3" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="3" />
            <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="3" />
            <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="3" />
            <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="3" />
            <Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="3" />
            <Link inputowner="7" indexofinput="2" outputowner="5" indexofoutput="3" />
            <Link inputowner="8" indexofinput="2" outputowner="5" indexofoutput="3" />
          </Diagram>
        </BehaviorKeyframe>
      </BehaviorLayer>
    </Timeline>
  </Box>
</ChoregrapheProject>
